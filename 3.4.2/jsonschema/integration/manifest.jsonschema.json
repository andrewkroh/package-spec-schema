{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://schemas.elastic.dev/package-spec/3.4.2/integration/manifest.jsonschema.json",
  "type": "object",
  "allOf": [
    {
      "if": {
        "properties": {
          "policy_templates": {
            "maxItems": 1
          }
        }
      },
      "then": {
        "properties": {
          "policy_templates_behavior": {
            "default": "all",
            "enum": [
              "all"
            ]
          }
        }
      },
      "else": {
        "properties": {
          "policy_templates_behavior": {
            "default": "all",
            "enum": [
              "combined_policy",
              "individual_policies",
              "all"
            ]
          }
        }
      }
    }
  ],
  "required": [
    "format_version",
    "name",
    "title",
    "description",
    "version",
    "type",
    "owner"
  ],
  "properties": {
    "title": {
      "$ref": "#/definitions/title"
    },
    "description": {
      "$ref": "#/definitions/description"
    },
    "type": {
      "description": "The type of package.",
      "examples": [
        "integration"
      ],
      "type": "string",
      "enum": [
        "integration"
      ]
    },
    "format_version": {
      "description": "The version of the package specification format used by this package.",
      "$ref": "#/definitions/version"
    },
    "agent": {
      "$ref": "#/definitions/agent"
    },
    "categories": {
      "$ref": "#/definitions/categories"
    },
    "conditions": {
      "$ref": "#/definitions/conditions"
    },
    "elasticsearch": {
      "description": "Elasticsearch requirements",
      "type": "object",
      "properties": {
        "privileges": {
          "description": "Elasticsearch privilege requirements",
          "type": "object",
          "properties": {
            "cluster": {
              "description": "Elasticsearch cluster privilege requirements",
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "icons": {
      "$ref": "#/definitions/icons"
    },
    "name": {
      "description": "The name of the package.",
      "examples": [
        "apache"
      ],
      "type": "string",
      "pattern": "^[a-z0-9_]+$"
    },
    "owner": {
      "$ref": "#/definitions/owner"
    },
    "policy_templates": {
      "description": "List of policy templates offered by this package.",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "name",
          "title",
          "description"
        ],
        "properties": {
          "title": {
            "description": "Title of policy template.",
            "examples": [
              "Apache logs and metrics"
            ],
            "type": "string"
          },
          "description": {
            "description": "Longer description of policy template.",
            "examples": [
              "Collect logs and metrics from Apache instances"
            ],
            "type": "string"
          },
          "categories": {
            "$ref": "#/definitions/categories"
          },
          "configuration_links": {
            "$ref": "#/definitions/configuration_links"
          },
          "data_streams": {
            "description": "List of data streams compatible with the policy template.",
            "type": "array",
            "items": {
              "description": "Data stream name",
              "examples": [
                "ec2_logs",
                "spamfirewall",
                "access"
              ],
              "type": "string",
              "format": "data-stream-name"
            }
          },
          "deployment_modes": {
            "$ref": "#/definitions/deployment_modes"
          },
          "fips_compatible": {
            "$ref": "#/definitions/fips_compatible"
          },
          "icons": {
            "$ref": "#/definitions/icons"
          },
          "inputs": {
            "description": "List of inputs supported by policy template.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "title",
                "description"
              ],
              "properties": {
                "title": {
                  "description": "Title of input.",
                  "examples": [
                    "Collect logs from Apache instances"
                  ],
                  "type": "string"
                },
                "description": {
                  "description": "Longer description of input.",
                  "examples": [
                    "Collecting Apache access and error logs"
                  ],
                  "type": "string"
                },
                "type": {
                  "description": "Type of input.",
                  "type": "string",
                  "not": {
                    "const": "otelcol"
                  }
                },
                "required_vars": {
                  "$ref": "./data_stream/manifest.jsonschema.json#/definitions/required_vars"
                },
                "deployment_modes": {
                  "description": "List of deployment modes that this input is compatible with. If not specified, the input is compatible with all deployment modes.\n",
                  "examples": [
                    [
                      "default"
                    ],
                    [
                      "agentless"
                    ],
                    [
                      "default",
                      "agentless"
                    ]
                  ],
                  "type": "array",
                  "minItems": 1,
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "enum": [
                      "default",
                      "agentless"
                    ]
                  }
                },
                "input_group": {
                  "description": "Name of the input group",
                  "type": "string",
                  "enum": [
                    "logs",
                    "metrics"
                  ]
                },
                "multi": {
                  "description": "Can input be defined multiple times",
                  "default": false,
                  "type": "boolean"
                },
                "template_path": {
                  "description": "Path of the config template for the input.",
                  "examples": [
                    "./agent/input/template.yml.hbs"
                  ],
                  "type": "string"
                },
                "vars": {
                  "$ref": "./data_stream/manifest.jsonschema.json#/definitions/vars"
                }
              },
              "additionalProperties": false
            }
          },
          "multiple": {
            "type": "boolean"
          },
          "name": {
            "description": "Name of policy template.",
            "examples": [
              "apache"
            ],
            "type": "string"
          },
          "screenshots": {
            "$ref": "#/definitions/screenshots"
          },
          "vars": {
            "$ref": "./data_stream/manifest.jsonschema.json#/definitions/vars"
          }
        },
        "additionalProperties": false
      }
    },
    "policy_templates_behavior": {
      "description": "Expected behavior when there are more than one policy template defined. When set to `combined_policy`, a single policy template is available that combines all the defined templates. When set to `individual_policies`, all policies are individually available, but there is no combined policy. The default value is `all`, where the combined policy template is available along with the individual policies.\n",
      "type": "string"
    },
    "screenshots": {
      "$ref": "#/definitions/screenshots"
    },
    "source": {
      "$ref": "#/definitions/source"
    },
    "vars": {
      "$ref": "./data_stream/manifest.jsonschema.json#/definitions/vars"
    },
    "version": {
      "description": "The version of the package.",
      "$ref": "#/definitions/version"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "title": {
      "description": "Title of the package. It should be the usual title given to the product, service or kind of source being managed by this package.\n",
      "examples": [
        "Apache HTTP Server",
        "MySQL",
        "AWS"
      ],
      "type": "string"
    },
    "description": {
      "description": "A longer description of the package. It should describe, at least all the kinds of data that is collected and with what collectors, following the structure \"Collect X from Y with X\".\n",
      "examples": [
        "Collect logs and metrics from Apache HTTP Servers with Elastic Agent.",
        "Collect logs and metrics from Amazon Web Services with Elastic Agent."
      ],
      "type": "string"
    },
    "agent": {
      "description": "Declarations related to Agent configurations or requirements.",
      "type": "object",
      "properties": {
        "privileges": {
          "type": "object",
          "properties": {
            "root": {
              "description": "Set to true if collection requires root privileges in the agent.",
              "type": "boolean"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "categories": {
      "description": "Categories to which this package belongs.",
      "type": "array",
      "items": {
        "examples": [
          "web"
        ],
        "type": "string",
        "enum": [
          "advanced_analytics_ueba",
          "analytics_engine",
          "application_observability",
          "app_search",
          "asset_inventory",
          "auditd",
          "authentication",
          "aws",
          "azure",
          "big_data",
          "cdn_security",
          "cloud",
          "cloudsecurity_cdr",
          "config_management",
          "connector",
          "connector_client",
          "connector_package",
          "containers",
          "content_source",
          "crawler",
          "credential_management",
          "crm",
          "custom",
          "custom_logs",
          "database_security",
          "datastore",
          "dns_security",
          "edr_xdr",
          "elasticsearch_sdk",
          "elastic_stack",
          "email_security",
          "enterprise_search",
          "firewall_security",
          "google_cloud",
          "iam",
          "ids_ips",
          "infrastructure",
          "java_observability",
          "kubernetes",
          "language_client",
          "languages",
          "load_balancer",
          "message_queue",
          "misconfiguration_workflow",
          "monitoring",
          "native_search",
          "network",
          "network_security",
          "notification",
          "observability",
          "opentelemetry",
          "os_system",
          "process_manager",
          "productivity",
          "productivity_security",
          "proxy_security",
          "sdk_search",
          "security",
          "siem",
          "stream_processing",
          "support",
          "threat_intel",
          "ticketing",
          "version_control",
          "virtualization",
          "vpn_security",
          "vulnerability_management",
          "vulnerability_workflow",
          "web",
          "web_application_firewall",
          "websphere",
          "workplace_search"
        ]
      }
    },
    "conditions": {
      "description": "Conditions under which this package can be installed.",
      "type": "object",
      "properties": {
        "elastic": {
          "description": "Elastic conditions",
          "type": "object",
          "properties": {
            "capabilities": {
              "description": "Stack features that are required by the package to work properly.\nThe package should not be used in deployments without the indicated features.\nPackages that don't indicate any capability condition can be used on any deployment.",
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "apm",
                  "enterprise_search",
                  "observability",
                  "security",
                  "serverless_search",
                  "uptime"
                ]
              }
            },
            "subscription": {
              "description": "The subscription required for this package.",
              "examples": [
                "basic"
              ],
              "default": "basic",
              "type": "string",
              "enum": [
                "basic",
                "gold",
                "platinum",
                "enterprise"
              ]
            }
          },
          "additionalProperties": false
        },
        "kibana": {
          "description": "Kibana conditions",
          "type": "object",
          "properties": {
            "version": {
              "description": "Kibana versions compatible with this package.",
              "examples": [
                ">=7.9.0"
              ],
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "configuration_links": {
      "description": "List of links related to inputs and policy templates.",
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": [
          "title",
          "url",
          "type"
        ],
        "properties": {
          "title": {
            "description": "Link title",
            "type": "string"
          },
          "type": {
            "description": "Type of link. `next_steps` for links to locations that can be relevant right after configuring the policy. `action` for actions that can be performed while the policy is in use.",
            "type": "string",
            "enum": [
              "action",
              "next_step"
            ]
          },
          "content": {
            "description": "Link description",
            "type": "string"
          },
          "url": {
            "description": "Link url. Format is `http://...` or `https://...` for external links,  `kbn:/app/...` for links internal to Kibana.",
            "type": "string",
            "pattern": "^(http(s)?://|kbn:/)"
          }
        },
        "additionalProperties": false
      }
    },
    "deployment_modes": {
      "description": "Options related to the deployment modes. The deployment mode refers to the mode used to deploy the Elastic Agents running this policy.\n",
      "type": "object",
      "properties": {
        "default": {
          "description": "Options specific to the default deployment mode, where agents are normally managed by users, explicitly enrolled to Fleet and visible in UIs.\n",
          "type": "object",
          "properties": {
            "enabled": {
              "description": "Indicates if the default deployment mode is available for this template policy. It is enabled by default.\n",
              "default": true,
              "type": "boolean"
            }
          }
        },
        "agentless": {
          "description": "Options specific to the Agentless deployment mode. This mode is used in offerings where the Elastic Agents running these policies are fully managed for the user.\n",
          "type": "object",
          "allOf": [
            {
              "if": {
                "properties": {
                  "enabled": {
                    "const": true
                  }
                }
              },
              "then": {
                "required": [
                  "organization",
                  "division",
                  "team"
                ]
              }
            }
          ],
          "properties": {
            "division": {
              "description": "The division responsible for the integration. This is used to tag the agentless agent deployments for monitoring.\n",
              "examples": [
                "cloud-security"
              ],
              "type": "string"
            },
            "enabled": {
              "description": "Indicates if the agentless deployment mode is available for this template policy. It is disabled by default.\n",
              "default": false,
              "type": "boolean"
            },
            "is_default": {
              "description": "On policy templates that support multiple deployment modes, this setting can be set to true to use agentless mode by default.\n",
              "default": false,
              "type": "boolean"
            },
            "organization": {
              "description": "The responsible organization of the integration. This is used to tag the agentless agent deployments for monitoring.\n",
              "examples": [
                "security"
              ],
              "type": "string"
            },
            "resources": {
              "description": "The computing resources specifications for the Agentless deployment.\n",
              "type": "object",
              "properties": {
                "requests": {
                  "description": "The computing resources that the Agentless deployment will be initially allocated.\n",
                  "type": "object",
                  "properties": {
                    "cpu": {
                      "description": "The amount of CPUs that the Agentless deployment will be initially allocated.\n",
                      "examples": [
                        "1",
                        "1.5",
                        "1500m"
                      ],
                      "type": "string"
                    },
                    "memory": {
                      "description": "The amount of memory that the Agentless deployment will be initially allocated.\n",
                      "examples": [
                        "1G",
                        "1.5G"
                      ],
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            },
            "team": {
              "description": "The team responsible for the integration. This is used to tag the agentless agent deployments for monitoring.\n",
              "examples": [
                "cloud-security-posture-management"
              ],
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "fips_compatible": {
      "description": "Indicate if this package is capable of satisfying FIPS requirements. Set to false if it uses any input that cannot be configured to use FIPS cryptography.",
      "default": true,
      "type": "boolean"
    },
    "icons": {
      "description": "List of icons for by this package.",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "src"
        ],
        "properties": {
          "title": {
            "description": "Title of icon.",
            "examples": [
              "Apache Logo"
            ],
            "type": "string"
          },
          "type": {
            "description": "MIME type of the icon image file.",
            "examples": [
              "image/svg+xml"
            ],
            "type": "string"
          },
          "dark_mode": {
            "description": "Is this icon to be shown in dark mode?",
            "default": false,
            "type": "boolean"
          },
          "size": {
            "description": "Size of the icon.",
            "examples": [
              "32x32"
            ],
            "type": "string"
          },
          "src": {
            "description": "Relative path to the icon's image file.",
            "examples": [
              "/img/logo_apache.svg"
            ],
            "type": "string",
            "format": "relative-path"
          }
        },
        "additionalProperties": false
      }
    },
    "owner": {
      "type": "object",
      "required": [
        "github",
        "type"
      ],
      "properties": {
        "type": {
          "description": "Describes who owns the package and the level of support that is provided. The 'elastic' value indicates that the package is built and maintained by Elastic. The 'partner' value indicates that the package is built and maintained by a partner vendor and may include involvement from Elastic. The 'community' value indicates the package is built and maintained by non-Elastic community members.\n",
          "examples": [
            "community"
          ],
          "default": "community",
          "type": "string",
          "enum": [
            "elastic",
            "partner",
            "community"
          ]
        },
        "github": {
          "description": "Github team name of the package maintainer.",
          "examples": [
            "elastic",
            "apm-agent-java",
            "ux_infra_team"
          ],
          "type": "string",
          "pattern": "^(([a-zA-Z0-9-_]+)|([a-zA-Z0-9-_]+\\/[a-zA-Z0-9-_]+))$"
        }
      },
      "additionalProperties": false
    },
    "screenshots": {
      "description": "List of screenshots of Kibana assets created by this package.",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "src",
          "title"
        ],
        "properties": {
          "title": {
            "description": "Title of screenshot.",
            "examples": [
              "Apache HTTPD Server Status"
            ],
            "type": "string"
          },
          "type": {
            "description": "MIME type of the screenshot image file.",
            "examples": [
              "image/png"
            ],
            "type": "string"
          },
          "size": {
            "description": "Size of the screenshot.",
            "examples": [
              "1215x1199"
            ],
            "type": "string"
          },
          "src": {
            "description": "Relative path to the screenshot's image file.",
            "examples": [
              "/img/apache_httpd_server_status.png"
            ],
            "type": "string",
            "format": "relative-path"
          }
        },
        "additionalProperties": false
      }
    },
    "source": {
      "description": "Information about the source of the package.",
      "type": "object",
      "properties": {
        "license": {
          "description": "Identifier of the license of the package, as specified in https://spdx.org/licenses/.",
          "examples": [
            "Elastic-2.0"
          ],
          "type": "string",
          "enum": [
            "Apache-2.0",
            "Elastic-2.0"
          ]
        }
      },
      "additionalProperties": false
    },
    "version": {
      "description": "Version of the package, following semantic versioning. It can include pre-release labels.",
      "examples": [
        "1.0.0",
        "1.0.0-beta1",
        "1.0.0-SNAPSHOT",
        "1.0.0-next"
      ],
      "type": "string",
      "pattern": "^([0-9]+)\\.([0-9]+)\\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\\.[0-9A-Za-z-]+)*))?(?:\\+[0-9A-Za-z-]+)?$"
    }
  }
}
